% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_run_modify.R
\name{umxRun}
\alias{umxRun}
\title{umxRun: Run an mxModel}
\usage{
umxRun(
  model,
  n = 1,
  calc_SE = TRUE,
  calc_sat = TRUE,
  setValues = FALSE,
  setLabels = FALSE,
  intervals = FALSE,
  comparison = NULL
)
}
\arguments{
\item{model}{The \code{\link[=mxModel]{mxModel()}} you wish to run.}

\item{n}{The maximum number of times you want to run the model trying to get a code green run (defaults to 1)}

\item{calc_SE}{Whether to calculate standard errors (ignored when n = 1)
for the summary (if you use \code{\link[=mxCI]{mxCI()}} or \code{\link[=umxCI]{umxCI()}}, you can turn this off)}

\item{calc_sat}{Whether to calculate the saturated and independence models (for raw \code{\link[=mxData]{mxData()}} \code{\link[=mxModel]{mxModel()}}s) (defaults to TRUE - why would you want anything else?)}

\item{setValues}{Whether to set the starting values of free parameters (default = FALSE)}

\item{setLabels}{Whether to set the labels (default =  FALSE)}

\item{intervals}{Whether to run mxCI confidence intervals (default = FALSE) intervals = FALSE}

\item{comparison}{Whether to run umxCompare() after umxRun}
}
\value{
\itemize{
\item \code{\link[=mxModel]{mxModel()}}
}
}
\description{
\code{umxRun} is a version of \code{\link[=mxRun]{mxRun()}} which can run also set start values, labels, and run multiple times
It can also calculate the saturated and independence likelihoods necessary for most fit indices.
\strong{Note} this is not needed for umxRAM models or twin models - it is just a convenience to get base OpenMx models to run.
}
\examples{
require(umx)
data(demoOneFactor)
latents  = c("G")
manifests = names(demoOneFactor)
m1 = mxModel("One Factor", type = "RAM", 
	manifestVars = manifests, latentVars = latents, 
	mxPath(from = latents  , to = manifests),
	mxPath(from = manifests, arrows = 2),
	mxPath(from = latents  , arrows = 2, free = FALSE, values = 1.0),
	mxData(cov(demoOneFactor), type = "cov", numObs=500)
)

m1 = umxRun(m1) # just run: will create saturated model if needed
\dontrun{
m1 = umxRun(m1, setValues = TRUE, setLabels = TRUE) # set start values and label all parameters
umxSummary(m1, std = TRUE)
m1 = mxModel(m1, mxCI("G_to_x1")) # add one CI
m1 = mxRun(m1, intervals = TRUE)
residuals(m1, run = TRUE) # get CIs on all free parameters
confint(m1) # OpenMx's SE-based CIs
umxConfint(m1, run = TRUE) # get likelihood-based CIs on all free parameters
m1 = umxRun(m1, n = 10) # re-run up to 10 times if not green on first run
}

}
\references{
\itemize{
\item \url{https://www.github.com/tbates/umx}
}
}
\seealso{
Other Core Modeling Functions: 
\code{\link{umxAlgebra}()},
\code{\link{umxMatrix}()},
\code{\link{umxModify}()},
\code{\link{umxPath}()},
\code{\link{umxRAM}()},
\code{\link{umxSummary}()},
\code{\link{umxSuperModel}()},
\code{\link{umx}}
}
\concept{Core Modeling Functions}
